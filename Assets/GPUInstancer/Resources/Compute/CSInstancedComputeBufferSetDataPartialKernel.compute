
#if SHADER_API_MOBILE && SHADER_API_METAL
    #define NUM_THREADS 512
#elif SHADER_API_MOBILE && SHADER_API_VULKAN
    #define NUM_THREADS 128
#elif SHADER_API_MOBILE && SHADER_API_GLES3
    #define NUM_THREADS 128
#elif SHADER_API_GLCORE
    #define NUM_THREADS 512
#else
    #define NUM_THREADS 1024
#endif

#pragma kernel CSInstancedComputeBufferSetDataPartialKernel
#pragma kernel CSInstancedComputeBufferSetDataSingleKernel

RWStructuredBuffer<float4x4> gpuiInstanceData;
RWStructuredBuffer<float4x4> gpuiManagedData;

uniform float4x4 dataToSet;
uniform uint computeBufferStartIndex;
uniform uint count;

[numthreads(NUM_THREADS, 1, 1)]
void CSInstancedComputeBufferSetDataPartialKernel(uint3 id : SV_DispatchThreadID)
{
    // runtime modification on instanceData 
    if (count > id.x)
        gpuiInstanceData[computeBufferStartIndex + id.x] = gpuiManagedData[id.x];
}

[numthreads(1, 1, 1)]
void CSInstancedComputeBufferSetDataSingleKernel(uint3 id : SV_DispatchThreadID)
{
    gpuiInstanceData[computeBufferStartIndex] = dataToSet;
}